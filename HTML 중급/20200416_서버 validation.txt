----서버 validation----
서버에서 유효성 검사를 하는 방법

 - 유효성 검사란? 존재 여부와 값에 대한 조건을 주고 판단하는 것.

 - front-end : html, javascript, css
 - back-end : php, java, python


 -- HTML5 validation의 경우 front-end에서만 이뤄지는 유효성 검사임.
  - 이 경우 일반적 상황에서는 문제가 생기지 않지만, 특정한 경우에는 심각한 문재가 발생할 수 있다.
	ex)누구나 마음을 먹으면 HTML의 소스를 변경할 수 있고, 개발자 도구를 통해 누구나 수정해서 지워버릴 수가 있다.
 	    HTML을 다룰 줄 아는 사람이면 개발자 도구를 통해 쉽게 코드를 분석할 수 있기 때문에 form이 전송되는 위치로 임의로 HTML을 만들어
	    잘못된 form을 전송하게 할 수도 있다...
	--> 그렇기에 이런일들을 막고 완벽한 유효성 검사를 하기 위해서는 클라이언트 측 뿐만 아니라, 서버 측에서도 유효성 검사를 해주어야 함.
	--> 실제 상용되고 있는 웹사이트들도 front-end에서만 유효성검사를 해, 취약한 곳들이 많다.
  
 - 자주 사용하게 될 코드
	- if문

	- isset(); - 해당 변수에 값이 할당 되었는지 판단하는 함수.
		만일 isset( name ); 이라 작성한다면, name이라는 변수에 그 값이 지정되었는지 확인하고,
		존재하면 true를, 존재하지 않으면 flase를 return한다.

	ex>>	if( isset( $_POST["name"] ) ) {
   			echo "통과";
	  	} else {
    			echo "실패";
		}
	==> required와 같은 역할.

	- strpos(); - 어떤 문자열에서 우리가 원하는 값이 있는지 없는지 판단하고 결과를 출력하는 함수,
		  strpos( "조사할 문자열", "찾을 문자" );
		  만약 조사할 문자열에 찾을 문자열이 없다면 false를 return하고, 있다면 true를 return함.

	ex>>	if( strpos($_POST["email"], "@") ) {
   			echo "정상적인 이메일 입니다";
		} else {
 			echo "이메일 형식이 옳지 않습니다.";
		}
	==> pattern과 같은 역할.

	- strlen(); - 문자열의 길이를 가져오는 함수.
		   해당 문자열의 길이(띄어쓰기 포함)를 리턴하기 때문에 if문과 활용하여 길이에 대한 유효성 검사를 할 수 있다.
		
	ex>>	if ( strlen($_POST["name"] < 2 ) {
   			echo "잘못된 이름 길이 입니다.";
		else {
    			echo "정상적인 이름 길이입니다.";
		}